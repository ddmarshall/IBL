# Top level build settings
[build-system]
requires = [
    "setuptools>=64.0",
    "wheel"
]
build-backend = "setuptools.build_meta"


# See this for settings: https://packaging.python.org/en/latest/specifications/declaring-project-metadata/
[project]
name = "IBL"
version = "0.6.0.dev"
authors = [
    {name = "David D. Marshall", email = "ddmarshall@gmail.com"},
    {name = "Malachi Edland"},
]
description = "Integral boundary layer method implementations for use with inviscid flow solvers."
readme = "README.rst"
requires-python = ">=3.9"
license = {file = "license.rst"}
keywords = [
    "Integral Boundary Layer Methods",
    "Aerodynamics",
    "Viscous Flow"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering"
]
dependencies = [
    "numpy==1.24",
    "scipy==1.12",
    "typing_extensions==4.12"
]

[project.urls]
documentation = "https://ddmarshall.github.io/IBL/index.html"
repository = "https://github.com/ddmarshall/IBL"

[project.optional-dependencies]
examples = ["matplotlib>=3.5"]
tests = [
    "pylint==3.0.*",
    "mypy==1.8.*",
    "basedpyright==1.13.*",
    "coverage[toml]==7.4.*",
    "tox==4.12.*",
    "sphinx-rtd-theme==1.3.*"
]


# Setuptools settings
[tool.setuptools]
include-package-data = true
packages = ["ibl"]

# [tool.setuptools.packages.find]
# where = ["ibl"]

[tool.setuptools.package-data]
stanford_olympics = ["*.txt"]


# Mypy settings
[tool.mypy]
plugins = "numpy.typing.mypy_plugin"
warn_unused_configs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
files = [
    "ibl",
    "examples",
    "tests"
]

[[tool.mypy.overrides]]
module = [
    "scipy.*",
]
ignore_missing_imports = true


# Pylint settings
[tool.pylint.basic]
good-names-rgxs = ["^[_a-z][_a-z0-9]?$"]

[tool.pylint.main]
disable = ["useless-import-alias"]

[tool.pylint.design]
max-args = 10
max-attributes = 20
max-locals = 20
max-public-methods = 30
min-public-methods = 1

[tool.pylint.format]
max-line-length = 79

[tool.pylint.similarities]
min-similarity-lines = 12


# Pyright settings
[tool.pyright]
include=[
    "ibl",
    "examples",
    "tests"
]
reportInvalidTypeForm = false
reportUnknownVariableType = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportMissingTypeArgument = false
reportAny = false
reportMissingTypeStubs = false
reportDeprecated = false

# Coverage.py settings
[tool.coverage.run]
branch = true
command_line = "-m unittest discover --start-directory tests"

[tool.coverage.report]
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
